From bccfa6566e066975f1839cc9bbf36d94a755ce43 Mon Sep 17 00:00:00 2001

From: Moritz 'Morty' Str√ºbe <morty@gmx.net>

Make reimaddr-functions more efficient
---
 core/net/rime/rimeaddr.h |  104 ++++++++++++++++++++++++++++++++++++----------
 1 files changed, 82 insertions(+), 22 deletions(-)

diff --git a/core/net/rime/rimeaddr.h b/core/net/rime/rimeaddr.h
index 962b438..5f4e22e 100644
--- a/core/net/rime/rimeaddr.h
+++ b/core/net/rime/rimeaddr.h
@@ -62,12 +62,50 @@
 #define RIMEADDR_SIZE 2
 #endif /* RIMEADDR_SIZE */
 
+#ifndef RIMEADDR_MEM_FUNC
+// 0 is the default from the original contiki
+// 1 uses string-functions. This is useful if the compiler supports optimizing these functions.
+// 2 uses inline-functions. This is noramlly faster and smaller than the original solution. 
+#define RIMEADDR_MEM_FUNC 0
+#endif
+
+#if RIMEADDR_MEM_FUNC
+#include <string.h>
+#endif
+
+
 typedef union {
   unsigned char u8[RIMEADDR_SIZE];
 } rimeaddr_t;
 
 
 /**
+ * \brief      The Rime address of the node
+ *
+ *             This variable contains the Rime address of the
+ *             node. This variable should not be changed directly;
+ *             rather, the rimeaddr_set_node_addr() function should be
+ *             used.
+ *
+ */
+extern rimeaddr_t rimeaddr_node_addr;
+
+/**
+ * \brief      The null Rime address
+ *
+ *             This variable contains the null Rime address. The null
+ *             address is used in route tables to indicate that the
+ *             table entry is unused. Nodes with no configured address
+ *             has the null address. Nodes with their node address set
+ *             to the null address will have problems communicating
+ *             with other nodes.
+ *
+ */
+extern const rimeaddr_t rimeaddr_null;
+
+
+
+/**
  * \brief      Copy a Rime address
  * \param dest The destination
  * \param from The source
@@ -76,7 +114,23 @@ typedef union {
  *             to another.
  *
  */
+#if ! RIMEADDR_MEM_FUNC
 void rimeaddr_copy(rimeaddr_t *dest, const rimeaddr_t *from);
+#elif RIMEADDR_MEM_FUNC == 1
+extern inline void rimeaddr_copy(rimeaddr_t *dest, const rimeaddr_t *from)
+{
+	memcpy((char *)dest, (char *)from, RIMEADDR_SIZE);
+}
+#else
+extern inline void
+rimeaddr_copy(rimeaddr_t *dest, const rimeaddr_t *src)
+{
+  u8_t i;
+  for(i = 0; i < RIMEADDR_SIZE; i++) {
+    dest->u8[i] = src->u8[i];
+  }
+}
+#endif
 
 /**
  * \brief      Compare two Rime addresses
@@ -90,7 +144,27 @@ void rimeaddr_copy(rimeaddr_t *dest, const rimeaddr_t *from);
  *             are the same, and zero if the addresses are different.
  *
  */
+
+#if ! RIMEADDR_MEM_FUNC
 int rimeaddr_cmp(const rimeaddr_t *addr1, const rimeaddr_t *addr2);
+#elif RIMEADDR_MEM_FUNC == 1
+extern inline int rimeaddr_cmp(const rimeaddr_t *addr1, const rimeaddr_t *addr2)
+{
+	return !memcmp((char *)addr1, (char *)addr2, RIMEADDR_SIZE);
+}
+#else
+extern inline int
+rimeaddr_cmp(const rimeaddr_t *addr1, const rimeaddr_t *addr2)
+{
+  u8_t i;
+  for(i = 0; i < RIMEADDR_SIZE; i++) {
+    if(addr1->u8[i] != addr2->u8[i]) {
+      return 0;
+    }
+  }
+  return 1;
+}
+#endif
 
 
 /**
@@ -100,31 +174,17 @@ int rimeaddr_cmp(const rimeaddr_t *addr1, const rimeaddr_t *addr2);
  *             This function sets the Rime address of the node.
  *
  */
+#if ! RIMEADDR_MEM_FUNC
 void rimeaddr_set_node_addr(rimeaddr_t *addr);
+#else
+extern inline void rimeaddr_set_node_addr(rimeaddr_t *t)
+{
+  rimeaddr_copy(&rimeaddr_node_addr, t);
+}
+#endif
+
 
-/**
- * \brief      The Rime address of the node
- *
- *             This variable contains the Rime address of the
- *             node. This variable should not be changed directly;
- *             rather, the rimeaddr_set_node_addr() function should be
- *             used.
- *
- */
-extern rimeaddr_t rimeaddr_node_addr;
 
-/**
- * \brief      The null Rime address
- *
- *             This variable contains the null Rime address. The null
- *             address is used in route tables to indicate that the
- *             table entry is unused. Nodes with no configured address
- *             has the null address. Nodes with their node address set
- *             to the null address will have problems communicating
- *             with other nodes.
- *
- */
-extern const rimeaddr_t rimeaddr_null;
 
 #endif /* __RIMEADDR_H__ */
 /** @} */

From 7f36d12906bd63edc0b67a2e76696ac8c99b8895 Mon Sep 17 00:00:00 2001

From: =?UTF-8?q?Moritz=20'Morty'=20Str=C3=BCbe?= <morty@gmx.net>

Subject: [PATCH] Cooja: Give better Javascript warnings
---
 .../se/sics/cooja/plugins/LogScriptEngine.java     |   38 +++++++++++++++++---
 .../java/se/sics/cooja/plugins/ScriptRunner.java   |   12 +++++-
 2 files changed, 41 insertions(+), 9 deletions(-)

diff --git a/tools/cooja/java/se/sics/cooja/plugins/LogScriptEngine.java b/tools/cooja/java/se/sics/cooja/plugins/LogScriptEngine.java
index c70f35f..977f1e7 100644
--- a/tools/cooja/java/se/sics/cooja/plugins/LogScriptEngine.java
+++ b/tools/cooja/java/se/sics/cooja/plugins/LogScriptEngine.java
@@ -41,6 +41,7 @@ import javax.script.Invocable;
 import javax.script.ScriptEngine;
 import javax.script.ScriptEngineManager;
 import javax.script.ScriptException;
+import javax.swing.JOptionPane;
 
 import org.apache.log4j.Logger;
 
@@ -311,14 +312,39 @@ public class LogScriptEngine {
               logger.fatal("Script error:", e);
               System.exit(1);
             }
-
-            logger.fatal("Script error:", e);
+            
+
+            
+            //Give message
+            throwable = e;
+            while ((throwable != null) && !(throwable instanceof ScriptException)) {
+                throwable = throwable.getCause();
+            }          
+
+            if(throwable != null){ //Give decent message
+              	ScriptException se = (ScriptException) throwable;
+            	//Clean up information.
+            	String msg =  se.getMessage();
+            	msg = msg.split(":",2)[1]; //Get rid of the class
+            	msg = msg.split("\\(<Unknown source>",2)[0];
+            	msg += " ( Line " + se.getLineNumber() + " )"; //Re-add information.
+            	
+                logger.fatal("Test script error: " +  msg);
+                
+                if (GUI.isVisualized()) {
+                	JOptionPane.showMessageDialog(GUI.getTopParentContainer(),  msg, "Javascript error in Line " + se.getLineNumber(), JOptionPane.WARNING_MESSAGE);
+                }
+            } else {
+	            logger.fatal("Script error:", e);
+	            
+	            if (GUI.isVisualized()) {
+	              GUI.showErrorDialog(GUI.getTopParentContainer(),
+	                  "Script error", e, false);
+	            }
+            }
+            // Clean up
             deactivateScript();
             simulation.stopSimulation();
-            if (GUI.isVisualized()) {
-              GUI.showErrorDialog(GUI.getTopParentContainer(),
-                  "Script error", e, false);
-            }
           }
         }
         /*logger.info("test script thread exits");*/
diff --git a/tools/cooja/java/se/sics/cooja/plugins/ScriptRunner.java b/tools/cooja/java/se/sics/cooja/plugins/ScriptRunner.java
index fd3084e..3688100 100644
--- a/tools/cooja/java/se/sics/cooja/plugins/ScriptRunner.java
+++ b/tools/cooja/java/se/sics/cooja/plugins/ScriptRunner.java
@@ -378,11 +378,17 @@ public class ScriptRunner extends VisPlugin {
         logger.info("Test script activated");
 
       } catch (ScriptException e) {
-        logger.fatal("Test script error: ", e);
+      	
+    	//Clean up information.
+    	String msg =  e.getMessage();
+    	msg = msg.split(":",2)[1]; //Get rid of the class
+    	msg = msg.split("\\(<Unknown source>",2)[0];
+    	msg += " ( Line " + e.getLineNumber() + " )"; //Re-add information.
+    	
+        logger.fatal("Test script error: " +  msg);
         setScriptActive(false);
         if (GUI.isVisualized()) {
-          GUI.showErrorDialog(GUI.getTopParentContainer(),
-              "Script error", e, false);
+        	JOptionPane.showMessageDialog(GUI.getTopParentContainer(),  msg, "Javascript error in Line " + e.getLineNumber(), JOptionPane.WARNING_MESSAGE);
         }
       } catch (RuntimeException e) {
         logger.fatal("Test script error: ", e);
